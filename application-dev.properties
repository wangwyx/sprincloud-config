##开发环境配置文件 http://10.0.197.145:85
gbes.http.url=http://10.0.197.162:285
gbesFile.http.url=http://10.0.197.162:29005
gbesVenues.http.url=http://10.0.204.52/venues/webApi/gtv-trade-venues/
#配置文件拆分
spring.profiles.include=rocketmq,session,upload
########################## jpa配置   ##########################
db.url=jdbc:mysql://10.0.197.225:3306/govp?serverTimezone=GMT%2b8&characterEncoding=utf8&nullCatalogMeansCurrent=true&useSSL=false
db.driver=com.mysql.jdbc.Driver
db.username=root
db.password=Root@123
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext 
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.show_sql=true
hibernate.hbm2ddl.auto=update
#数据库字典解压密码
des.key=com.glodon.default4gbp
########################## redis配置   ##########################################
logging.level.io.lettuce.core=error
logging.level.org.springframework.data.redis.core=error
# redisUtil使用的数据库索引
spring.local.redis.database=1
# 缓存注解使用的数据库
spring.cache.redis.database=14
# 连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379
spring.local.redis.url=
# Redis服务器主机。
spring.local.redis.host=127.0.0.1
# Redis服务器端口。
spring.local.redis.port=6379
# 登录redis服务器的密码。
spring.local.redis.password=
# 启用SSL支持。
spring.local.redis.ssl=false
# 池在给定时间可以分配的最大连接数。使用负值无限制。
spring.local.redis.lettuce.pool.max-active=80
# 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。
spring.local.redis.lettuce.pool.max-idle=10
# 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。
spring.local.redis.lettuce.pool.max-wait=-1
# 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。
spring.local.redis.lettuce.pool.min-idle=0
spring.local.redis.lettuce.pool.max-total=
spring.local.redis.lettuce.pool.max-wait-millis=

spring.local.redis.timeout=2000
# （哨兵模式）Redis服务器的名称。
spring.local.redis.sentinel.master=mymaster
# （哨兵模式，不填写则不用开启）以逗号分隔的主机：端口对的逗号分隔列表。
spring.local.redis.sentinel.nodes=
# （普通集群）在群集中执行命令时要遵循的最大重定向数目。
spring.local.redis.cluster.max-redirects=3
# （普通集群，不填写则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
spring.local.redis.cluster.nodes=
########################## spring security ###################
security.ignored=/**
#是否开启认证
security.enable=true
#是否开启验证码
security.kaptcha.enabled=false
######################### spring cloud #######################
spring.application.name=gboat3-g3-service
#服务注册中心的配置内容，指定服务注册中心的位置 http://10.1.94.103:8100/eureka
#eureka.client.service-url.defaultZone=http://localhost:8100/eureka
#eureka.instance.hostname=10.1.94.44
#eureka.client.service-url.defaultZone=http://localhost:8100/eureka
#容器加载FeignClient服务接口时，定义beanName是否覆盖FeignClient的name属性值
spring.main.allow-bean-definition-overriding: true
#用户中心服务应用名配置
gboat3.usercenter.context-path=/main
#工作台服务应用名配置
gboat3.workbench.context-path=/facade
gboat3.admin.context-path=/admin
#企业库服务应用名配置
gboat3.gfm.context-path=/gfm
#配置的是本地 Consul 的地址和端口（Server 节点和 Client 节点都可以）
#会调用 Consul HTTP REST 接口，进行服务注册。 10.1.94.103
spring.cloud.consul.enabled=true
spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500
#配置启动是否注册服务，
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.register=true
#配置 Spring Boot 服务的主机地址，也可以不进行配置，默认本机地址。
spring.cloud.consul.discovery.hostname=127.0.0.1
#配置 Consul 注册的服务名称，${spring.application.name}变量是我们上面application.properties配置文件中添加的配置。]
spring.cloud.consul.discovery.serviceName=${spring.application.name}
#配置 Consul 健康检查地址，Actuator 组件帮我们进行了实现，所以我们不需要额外的实现，地址在服务启动的时候，打印信息里面可以看到。
spring.cloud.consul.discovery.healthCheckPath=${server.servlet.context-path}/actuator/health
#配置 Consul 健康检查频率，也就是心跳频率。
spring.cloud.consul.discovery.healthCheckInterval=15s
#配置 Consul 注册服务的 Tags，设置为urlprefix-/serviceName的格式，是自动注册到 Fabio 集群中。
spring.cloud.consul.discovery.tags: ${spring.cloud.consul.discovery.hostname}-/${spring.application.name}
#配置 Consul 注册服务 ID。
spring.cloud.consul.discovery.instanceId=${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
#超时配置
ribbon.ReadTimeout=600000
ribbon.ConnectTimeout=600000
########################## 平台配置 ##############################
#文件临时存储目录
gboat3.cache.tempath=/usr/local/g3/main
#当前系统编码
gboat3.current-system-code=G3
########################## 定时器配置 ##############################
#微服务调用根路径
gboat3.quartz.context-path=/scheduler
#调度中心地址，多个用,分隔  http://127.0.0.1:8091/scheduler
gboat3.quartz.scheduler.addresses=
#执行器组名，同名的执行器会放在同一组中，类似集群
gboat3.quartz.executor.appname=testGroup
#执行器ip可不填写
gboat3.quartz.executor.ip=
#执行器端口，端口不能重复
gboat3.quartz.executor.port=9991
#执行器日志存储位置
gboat3.quartz.executor.logpath=/data/applogs/xxl-job/jobhandler
#执行器日志保留天数-1为永久
gboat3.quartz.executor.logretentiondays=-1
#远程调用token可不填
gboat3.quartz.accessToken=

#生产环境，一定要将true改为false
#swagger.enable=false
